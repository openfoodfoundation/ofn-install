---
- name: default_user
  hosts: ofn_servers
  remote_user: root
  gather_facts: no
  pre_tasks:
    - name: Check if default user exists, we will skip the default_user role if already existent.
      local_action: "command ssh -q -o BatchMode=yes -o ConnectTimeout=3 {{ user }}@{{ inventory_hostname }} 'echo ok'"
      register: check_default_user
      ignore_errors: true
  roles:
    - role: default_user
      become: yes
      tags: default_user
      when: "'ok' != check_default_user.stdout"

- name: provision
  hosts: ofn_servers
  remote_user: "{{ user }}"

  vars:
    nginx_daemon_mode: off

  roles:
    - role: geerlingguy.security
      become: yes
      become_user: root
      tags: security

    - role: unicorn_user # Create unprivileged user to run unicorn
      tags: unicorn_user

    - role: common # Install common apps and libraries, and setup shell.
      tags: common

    - role: language # Setup locale.
      tags: language

    - role: zzet.rbenv # Install ruby. If missing run: ansible-galaxy install zzet.rbenv
      rbenv:
        env: user
        version: v1.0.0
        default_ruby: "{{ ruby_version }}"
        rubies:
          - version: "{{ ruby_version }}"

      rbenv_users:
        - "{{ unicorn_user }}"
      tags: ruby

    - role: bundler # Install bundler on its own here as it has to be installed after zzet.rbenv
      become: yes
      become_user: "{{ unicorn_user }}"
      tags: bundler

    - role: app # Build the app directory structure and support files.
      become: yes
      become_user: "{{ unicorn_user }}"
      tags: app

    - role: dbserver # Set up database server and user for the app.
      tags: dbserver

    - role: geerlingguy.certbot
      become: yes
      certbot_auto_renew_user: "{{ unicorn_user }}"
      when: protocol == "https"
      tags: cert

    - role: cert
      when: protocol == "https"
      tags: cert

    - role: jdauphant.nginx
      become: yes
      tags: nginx

    - role: webserver # Build the unicorn webserver.
      tags: webserver

